<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Programming on My Digital Garden</title><link>https://tolejarczuk.github.io/tags/programming/</link><description>Recent content in Programming on My Digital Garden</description><generator>Hugo -- 0.125.3</generator><language>en-us</language><atom:link href="https://tolejarczuk.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Repository Pattern</title><link>https://tolejarczuk.github.io/posts/programming/repository-pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/programming/repository-pattern/</guid><description>Repository Pattern public class Repository&amp;lt;T&amp;gt; : IRepository&amp;lt;T&amp;gt; where T : EntityBase { private readonly ApplicationDbContext _dbContext; public Repository(ApplicationDbContext dbContext) { _dbContext = dbContext; } public virtual T GetById(int id) { return _dbContext.Set&amp;lt;T&amp;gt;().Find(id); } public virtual IEnumerable&amp;lt;T&amp;gt; List() { return _dbContext.Set&amp;lt;T&amp;gt;().AsEnumerable(); } public virtual IEnumerable&amp;lt;T&amp;gt; List(System.Linq.Expressions.Expression&amp;lt;Func&amp;lt;T, bool&amp;gt;&amp;gt; predicate) { return _dbContext.Set&amp;lt;T&amp;gt;() .Where(predicate) .AsEnumerable(); } public void Insert(T entity) { _dbContext.Set&amp;lt;T&amp;gt;().Add(entity); _dbContext.SaveChanges(); } public void Update(T entity) { _dbContext.Entry(entity).State = EntityState.Modified; _dbContext.SaveChanges(); } public void Delete(T entity) { _dbContext.</description></item></channel></rss>