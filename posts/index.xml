<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on My Digital Garden</title><link>https://tolejarczuk.github.io/posts/</link><description>Recent content in Posts on My Digital Garden</description><generator>Hugo -- 0.127.0</generator><language>en-us</language><atom:link href="https://tolejarczuk.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://tolejarczuk.github.io/posts/bunny-and-rainbow/strona/polityki/cookie-policy/cookie-policy-snippet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/bunny-and-rainbow/strona/polityki/cookie-policy/cookie-policy-snippet/</guid><description>COOKIEBELEID Laatst bijgewerkt 04 juni 2024
Dit Cookiebeleid legt uit hoe Emberlight Patrycja Jednoróg (“Bedrijf”, “wij”, “ons” en “onze”) cookies en vergelijkbare technologieën gebruikt om u te herkennen wanneer u onze website bezoekt op https://www.bunnyandrainbow.com (“Website”). Het legt uit wat deze technologieën zijn en waarom we ze gebruiken, evenals uw rechten om ons gebruik ervan te controleren.
In sommige gevallen kunnen we cookies gebruiken om persoonlijke informatie te verzamelen, of die persoonlijke informatie wordt als we deze combineren met andere informatie.</description></item><item><title/><link>https://tolejarczuk.github.io/posts/bunny-and-rainbow/strona/polityki/disclaimer/disclaimer-snippet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/bunny-and-rainbow/strona/polityki/disclaimer/disclaimer-snippet/</guid><description>VRIJWARING Laatst bijgewerkt 15 april 2024
VRIJWARING WEBSITE De informatie verstrekt door Emberlight Patrycja Jednoróg (“wij”, “ons”, of “onze”) op https://www.bunnyandrainbow.com (de “Site”) is alleen voor algemene informatiedoeleinden. Alle informatie op de Site wordt te goeder trouw verstrekt, maar we geven geen enkele verklaring of garantie, expliciet of impliciet, met betrekking tot denauwkeurigheid, toereikendheid, geldigheid, betrouwbaarheid, beschikbaarheid of volledigheid van de informatie op de Site. IN GEEN GEVAL ZULLEN WIJ AANSPRAKELIJK ZIJN VOOR ENIG VERLIES OF SCHADE VAN WELKE AARD DAN OOK DIE VOORTVLOEIT UIT HET GEBRUIK VAN DE SITE OF HET VERTROUWEN OP DE INFORMATIE DIE OP DE SITE WORDT VERSTREKT.</description></item><item><title/><link>https://tolejarczuk.github.io/posts/bunny-and-rainbow/strona/polityki/terms-and-conditions/terms-and-conditions-snippet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/bunny-and-rainbow/strona/polityki/terms-and-conditions/terms-and-conditions-snippet/</guid><description>ALGEMENE VOORWAARDEN Laatst bijgewerkt 15 april 2024
OVEREENKOMST MET ONZE JURIDISCHE VOORWAARDEN Wij zijn Emberlight Patrycja Jednoróg (“Bedrijf”, “wij”, “ons”, “onze”), een bedrijf geregistreerd in België te Atealaan 34, Herentals 2200. Ons btw-nummer is BE1008181277.
Wij exploiteren de website https://www.bunnyandrainbow.com (de “Site”), evenals alle andere gerelateerde producten en diensten die verwijzen naar of linken naar deze juridische voorwaarden (de “Juridische Voorwaarden”) (gezamenlijk de “Diensten”).
Bunny and Rainbow is een online winkel gespecialiseerd in hoogwaardige babykleding die exclusief wordt ingekocht bij Europese leveranciers.</description></item><item><title>Adding user to sudoers</title><link>https://tolejarczuk.github.io/posts/devops/linux/adding-user-to-sudoers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/devops/linux/adding-user-to-sudoers/</guid><description>Adding user to sudoers This guide provides a one-liner to add a user to the sudoers file in a secure and organized way. Instead of modifying the main /etc/sudoers file directly, we&amp;rsquo;ll create a new file in the /etc/sudoers.d/ directory.
One-Liner Command echo &amp;#34;$USER ALL=(ALL:ALL) NOPASSWD: ALL&amp;#34; | sudo tee /etc/sudoers.d/$USER This command creates a new file with the same name as the current user in the /etc/sudoers.d/ directory, specifying the sudo configuration for that user.</description></item><item><title>Ansible</title><link>https://tolejarczuk.github.io/posts/devops/ansible/ansible/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/devops/ansible/ansible/</guid><description>Ansible Ansible playbook syntax: ansible-playbook ./playbooks/apt.yml -i ./inventory/hosts.ini Ansible global directory error on Windows Unmont and mount C drive in WSL sudo umount /mnt/c &amp;amp;&amp;amp; sudo mount -t drvfs C: /mnt/c -o metadata Go to ansible directory cd /mnt/c/Users/Tom/ansible Change permissions sudo chmod o-w . Last Modified: =dateformat(this.file.mtime, &amp;quot;DDDD, HH:mm&amp;quot;)
Tags: =this.file.tags
List FROM #ansible</description></item><item><title>Create Multiline File</title><link>https://tolejarczuk.github.io/posts/devops/linux/create-multiline-file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/devops/linux/create-multiline-file/</guid><description>Create Multiline File # Creating a Multiple-Line File with `cat` and Here Document In Unix-like systems, you can use the `cat` command along with a Here Document (&amp;lt;&amp;lt;) to create a multiple-line file efficiently. This is particularly useful when you need to generate configuration files, such as an `application.properties` file. ## Syntax: ```bash cat &amp;lt;&amp;lt;EOF &amp;gt;application.properties &amp;lt;CONTENT&amp;gt; EOF Replace &amp;lt;CONTENT&amp;gt; with the actual content you want in the file.
Example: Suppose you want to create an application.</description></item><item><title>Generate Random Password</title><link>https://tolejarczuk.github.io/posts/devops/linux/generate-random-password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/devops/linux/generate-random-password/</guid><description>Generating Random Text for Passwords Creating strong and unique passwords is crucial for securing your online accounts. One effective way to generate secure passwords is by using random text. Here are a few methods you can employ to generate random text for passwords:
1. Using Password Managers: Password managers are excellent tools for generating and storing secure passwords. Most password managers have built-in password generators that can create strong and unique passwords with a click.</description></item><item><title>Microservices</title><link>https://tolejarczuk.github.io/posts/school/semester-4/asml-project/microservices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/school/semester-4/asml-project/microservices/</guid><description>Microservices 1. Introduction 1.1 Evolution of Software Architectures The evolution of software architectures has seen a shift from monolithic applications to more modular and scalable approaches. Microservices architecture has emerged as a leading paradigm, offering a set of principles that promote agility and efficiency in software development.
1.2 Objectives The primary objectives of this paper are to:
Explain the core concepts of microservices architecture. Highlight the advantages of adopting microservices. Showcase successful implementations of microservices in industry.</description></item><item><title>Remove duplicate entries</title><link>https://tolejarczuk.github.io/posts/databases/postgresql/remove-duplicate-rows-in-postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/databases/postgresql/remove-duplicate-rows-in-postgresql/</guid><description>Remove Duplicate Rows in PostgreSQL The provided code snippet offers a way to remove duplicate rows in a PostgreSQL table (named &amp;rsquo;enc_history_entries&amp;rsquo;) based on the &amp;rsquo;encrypted_data&amp;rsquo; column. Let&amp;rsquo;s break down the steps:
CREATE TABLE enc_history_entries_temp (LIKE enc_history_entries INCLUDING ALL); insert into enc_history_entries_temp(encrypted_data, nonce, device_id, user_id, &amp;#34;date&amp;#34;, encrypted_id, read_count) select distinct on (encrypted_data) encrypted_data, nonce, device_id, user_id, &amp;#34;date&amp;#34;, encrypted_id, read_count from enc_history_entries; drop table enc_history_entries; alter table enc_history_entries_temp rename to enc_history_entries; Temporary Table: insert into enc_history_entries_temp.</description></item><item><title>Repository Pattern</title><link>https://tolejarczuk.github.io/posts/programming/repository-pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/programming/repository-pattern/</guid><description>Repository Pattern public class Repository&amp;lt;T&amp;gt; : IRepository&amp;lt;T&amp;gt; where T : EntityBase { private readonly ApplicationDbContext _dbContext; public Repository(ApplicationDbContext dbContext) { _dbContext = dbContext; } public virtual T GetById(int id) { return _dbContext.Set&amp;lt;T&amp;gt;().Find(id); } public virtual IEnumerable&amp;lt;T&amp;gt; List() { return _dbContext.Set&amp;lt;T&amp;gt;().AsEnumerable(); } public virtual IEnumerable&amp;lt;T&amp;gt; List(System.Linq.Expressions.Expression&amp;lt;Func&amp;lt;T, bool&amp;gt;&amp;gt; predicate) { return _dbContext.Set&amp;lt;T&amp;gt;() .Where(predicate) .AsEnumerable(); } public void Insert(T entity) { _dbContext.Set&amp;lt;T&amp;gt;().Add(entity); _dbContext.SaveChanges(); } public void Update(T entity) { _dbContext.Entry(entity).State = EntityState.Modified; _dbContext.SaveChanges(); } public void Delete(T entity) { _dbContext.</description></item><item><title>Ubuntu check ports</title><link>https://tolejarczuk.github.io/posts/devops/linux/ubuntu-check-ports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tolejarczuk.github.io/posts/devops/linux/ubuntu-check-ports/</guid><description>Ubuntu check ports In Ubuntu, you can use the following methods to see which ports are being used by which applications:
1. Using the netstat command:
This command displays network connections, routing tables, interface statistics, and more. To list all open ports and the processes using them, run the following command in your terminal: sudo netstat -tulpn In this command:
-t shows TCP connections -u shows UDP connections -l shows only listening sockets -p shows the process ID and name -n shows numerical addresses instead of resolving hostnames To filter for a specific port, use grep.</description></item></channel></rss>